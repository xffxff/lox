execute: Some(
    Constant(
        F64(
            1.0,
        ),
    ),
)
stack: [1]
stdout: ""

execute: Some(
    Constant(
        F64(
            2.0,
        ),
    ),
)
stack: [1, 2]
stdout: ""

execute: Some(
    Add,
)
stack: [3]
stdout: ""

execute: Some(
    Pop,
)
stack: []
stdout: ""

execute: Some(
    Constant(
        F64(
            1.0,
        ),
    ),
)
stack: [1]
stdout: ""

execute: Some(
    Constant(
        F64(
            2.0,
        ),
    ),
)
stack: [1, 2]
stdout: ""

execute: Some(
    Constant(
        F64(
            3.0,
        ),
    ),
)
stack: [1, 2, 3]
stdout: ""

execute: Some(
    Multiply,
)
stack: [1, 6]
stdout: ""

execute: Some(
    Add,
)
stack: [7]
stdout: ""

execute: Some(
    Pop,
)
stack: []
stdout: ""

execute: Some(
    Constant(
        F64(
            1.0,
        ),
    ),
)
stack: [1]
stdout: ""

execute: Some(
    Constant(
        F64(
            2.0,
        ),
    ),
)
stack: [1, 2]
stdout: ""

execute: Some(
    Constant(
        F64(
            3.0,
        ),
    ),
)
stack: [1, 2, 3]
stdout: ""

execute: Some(
    Divide,
)
stack: [1, 0.6666666666666666]
stdout: ""

execute: Some(
    Subtract,
)
stack: [0.33333333333333337]
stdout: ""

execute: Some(
    Pop,
)
stack: []
stdout: ""

execute: Some(
    Constant(
        F64(
            1.0,
        ),
    ),
)
stack: [1]
stdout: ""

execute: Some(
    Constant(
        F64(
            2.0,
        ),
    ),
)
stack: [1, 2]
stdout: ""

execute: Some(
    Constant(
        F64(
            3.0,
        ),
    ),
)
stack: [1, 2, 3]
stdout: ""

execute: Some(
    Negate,
)
stack: [1, 2, -3]
stdout: ""

execute: Some(
    Multiply,
)
stack: [1, -6]
stdout: ""

execute: Some(
    Add,
)
stack: [-5]
stdout: ""

execute: Some(
    Pop,
)
stack: []
stdout: ""

execute: None
stack: []
stdout: ""

