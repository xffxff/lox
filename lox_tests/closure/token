TokenTree {
    source text: "var x = \"global\";\nfun outer() {\n  var x = \"outer\";\n  fun inner() {\n    print x;\n  }\n  inner();\n}\nouter();",
    tokens: [
        Alphabetic(var),
        Whitespace(' '),
        Alphabetic(x),
        Whitespace(' '),
        Op(=),
        Whitespace(' '),
        String(global),
        Semicolon,
        Whitespace('\n'),
        Alphabetic(fun),
        Whitespace(' '),
        Alphabetic(outer),
        Delimiter((),
        Tree(
            TokenTree {
                source text: "var x = \"global\";\nfun outer() {\n  var x = \"outer\";\n  fun inner() {\n    print x;\n  }\n  inner();\n}\nouter();",
                tokens: [],
            },
        ),
        Delimiter()),
        Whitespace(' '),
        Delimiter({),
        Tree(
            TokenTree {
                source text: "var x = \"global\";\nfun outer() {\n  var x = \"outer\";\n  fun inner() {\n    print x;\n  }\n  inner();\n}\nouter();",
                tokens: [
                    Whitespace('\n'),
                    Whitespace(' '),
                    Whitespace(' '),
                    Alphabetic(var),
                    Whitespace(' '),
                    Alphabetic(x),
                    Whitespace(' '),
                    Op(=),
                    Whitespace(' '),
                    String(outer),
                    Semicolon,
                    Whitespace('\n'),
                    Whitespace(' '),
                    Whitespace(' '),
                    Alphabetic(fun),
                    Whitespace(' '),
                    Alphabetic(inner),
                    Delimiter((),
                    Tree(
                        TokenTree {
                            source text: "var x = \"global\";\nfun outer() {\n  var x = \"outer\";\n  fun inner() {\n    print x;\n  }\n  inner();\n}\nouter();",
                            tokens: [],
                        },
                    ),
                    Delimiter()),
                    Whitespace(' '),
                    Delimiter({),
                    Tree(
                        TokenTree {
                            source text: "var x = \"global\";\nfun outer() {\n  var x = \"outer\";\n  fun inner() {\n    print x;\n  }\n  inner();\n}\nouter();",
                            tokens: [
                                Whitespace('\n'),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Alphabetic(print),
                                Whitespace(' '),
                                Alphabetic(x),
                                Semicolon,
                                Whitespace('\n'),
                                Whitespace(' '),
                                Whitespace(' '),
                            ],
                        },
                    ),
                    Delimiter(}),
                    Whitespace('\n'),
                    Whitespace(' '),
                    Whitespace(' '),
                    Alphabetic(inner),
                    Delimiter((),
                    Tree(
                        TokenTree {
                            source text: "var x = \"global\";\nfun outer() {\n  var x = \"outer\";\n  fun inner() {\n    print x;\n  }\n  inner();\n}\nouter();",
                            tokens: [],
                        },
                    ),
                    Delimiter()),
                    Semicolon,
                    Whitespace('\n'),
                ],
            },
        ),
        Delimiter(}),
        Whitespace('\n'),
        Alphabetic(outer),
        Delimiter((),
        Tree(
            TokenTree {
                source text: "var x = \"global\";\nfun outer() {\n  var x = \"outer\";\n  fun inner() {\n    print x;\n  }\n  inner();\n}\nouter();",
                tokens: [],
            },
        ),
        Delimiter()),
        Semicolon,
    ],
}