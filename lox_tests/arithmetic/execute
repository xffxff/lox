execute: Constant(
    F64(
        1.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
]
output: ""

execute: Constant(
    F64(
        2.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
]
output: ""

execute: Add
stack: [
    Number(
        3.0,
    ),
]
output: ""

execute: Pop
stack: []
output: ""

execute: Constant(
    F64(
        1.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
]
output: ""

execute: Constant(
    F64(
        2.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
]
output: ""

execute: Constant(
    F64(
        3.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
    Number(
        3.0,
    ),
]
output: ""

execute: Multiply
stack: [
    Number(
        1.0,
    ),
    Number(
        6.0,
    ),
]
output: ""

execute: Add
stack: [
    Number(
        7.0,
    ),
]
output: ""

execute: Pop
stack: []
output: ""

execute: Constant(
    F64(
        1.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
]
output: ""

execute: Constant(
    F64(
        2.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
]
output: ""

execute: Constant(
    F64(
        3.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
    Number(
        3.0,
    ),
]
output: ""

execute: Divide
stack: [
    Number(
        1.0,
    ),
    Number(
        0.6666666666666666,
    ),
]
output: ""

execute: Subtract
stack: [
    Number(
        0.33333333333333337,
    ),
]
output: ""

execute: Pop
stack: []
output: ""

execute: Constant(
    F64(
        1.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
]
output: ""

execute: Constant(
    F64(
        2.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
]
output: ""

execute: Constant(
    F64(
        3.0,
    ),
)
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
    Number(
        3.0,
    ),
]
output: ""

execute: Negate
stack: [
    Number(
        1.0,
    ),
    Number(
        2.0,
    ),
    Number(
        -3.0,
    ),
]
output: ""

execute: Multiply
stack: [
    Number(
        1.0,
    ),
    Number(
        -6.0,
    ),
]
output: ""

execute: Add
stack: [
    Number(
        -5.0,
    ),
]
output: ""

execute: Pop
stack: []
output: ""

