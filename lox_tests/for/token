TokenTree {
    source text: "for (var i = 0; i < 10; i = i + 1) print i;",
    span: Span {
        start: Offset(
            0,
        ),
        end: Offset(
            42,
        ),
    },
    tokens: [
        Alphabetic(for),
        Whitespace(' '),
        Delimiter((),
        Tree(
            TokenTree {
                source text: "for (var i = 0; i < 10; i = i + 1) print i;",
                span: Span {
                    start: Offset(
                        5,
                    ),
                    end: Offset(
                        33,
                    ),
                },
                tokens: [
                    Alphabetic(var),
                    Whitespace(' '),
                    Alphabetic(i),
                    Whitespace(' '),
                    Op(=),
                    Whitespace(' '),
                    Number(0),
                    Semicolon,
                    Whitespace(' '),
                    Alphabetic(i),
                    Whitespace(' '),
                    Op(<),
                    Whitespace(' '),
                    Number(10),
                    Semicolon,
                    Whitespace(' '),
                    Alphabetic(i),
                    Whitespace(' '),
                    Op(=),
                    Whitespace(' '),
                    Alphabetic(i),
                    Whitespace(' '),
                    Op(+),
                    Whitespace(' '),
                    Number(1),
                ],
            },
        ),
        Delimiter()),
        Whitespace(' '),
        Alphabetic(print),
        Whitespace(' '),
        Alphabetic(i),
        Semicolon,
    ],
}