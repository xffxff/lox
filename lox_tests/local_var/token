TokenTree {
    source text: "{\n    var a = 1;\n    {\n        var a = 2;\n        print a;\n    }\n    print a;\n}",
    tokens: [
        Delimiter({),
        Tree(
            TokenTree {
                source text: "{\n    var a = 1;\n    {\n        var a = 2;\n        print a;\n    }\n    print a;\n}",
                tokens: [
                    Whitespace('\n'),
                    Whitespace(' '),
                    Whitespace(' '),
                    Whitespace(' '),
                    Whitespace(' '),
                    Alphabetic(var),
                    Whitespace(' '),
                    Alphabetic(a),
                    Whitespace(' '),
                    Op(=),
                    Whitespace(' '),
                    Number(1),
                    Semicolon,
                    Whitespace('\n'),
                    Whitespace(' '),
                    Whitespace(' '),
                    Whitespace(' '),
                    Whitespace(' '),
                    Delimiter({),
                    Tree(
                        TokenTree {
                            source text: "{\n    var a = 1;\n    {\n        var a = 2;\n        print a;\n    }\n    print a;\n}",
                            tokens: [
                                Whitespace('\n'),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Alphabetic(var),
                                Whitespace(' '),
                                Alphabetic(a),
                                Whitespace(' '),
                                Op(=),
                                Whitespace(' '),
                                Number(2),
                                Semicolon,
                                Whitespace('\n'),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Alphabetic(print),
                                Whitespace(' '),
                                Alphabetic(a),
                                Semicolon,
                                Whitespace('\n'),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                                Whitespace(' '),
                            ],
                        },
                    ),
                    Delimiter(}),
                    Whitespace('\n'),
                    Whitespace(' '),
                    Whitespace(' '),
                    Whitespace(' '),
                    Whitespace(' '),
                    Alphabetic(print),
                    Whitespace(' '),
                    Alphabetic(a),
                    Semicolon,
                    Whitespace('\n'),
                ],
            },
        ),
        Delimiter(}),
    ],
}